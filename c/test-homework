#!/bin/bash

red()   { printf "%s%s%s\n" "$(tput setaf 1)" "$@" "$(tput sgr0)"; }
green() { printf "%s%s%s\n" "$(tput setaf 2)" "$@" "$(tput sgr0)"; }

do_test() {
  local test_desc test_expect test_data

  test_desc="$1"
  test_expect="$2"
  shift 2 
  test_data=("$@")

  printf "########################################################################\n"
  printf "#### TEST: %s\n" "$test_desc"
  printf "#### DATA: %s\n" "${test_data[*]}"

  if ! "$test_expect"; then
    printf "#### EXPECT: mismatch\n"
  else
    printf "#### EXPECT: match\n"
  fi


  outlog=$(printf "%s\n" "${test_data[*]}" | ./bin/homework)
  retval=$?
  #printf "%s\n" "$outlog"
  if [[ "$retval" != "0" ]]; then
    printf "#### RESULT: mismatch\n" 
  else
    printf "#### RESULT: match\n" 
  fi

  if [[ "$retval" != "0" ]]; then
    retval=false
  else
    retval=true
  fi

  if [[ "$test_expect" != "$retval" ]]; then
    red "TEST FAILED!" 
  else
    green "TEST SUCCEEDED!" 
  fi


}

do_test "all 1,2,3" \
  true \
  1 2 3 1 2 3 1 2 3

do_test "re-arrange the numbers" \
  true \
  1 2 3 3 2 1 2 1 3

do_test "mismatch on last number" \
  false \
  1 2 3 3 2 1 2 1 5

do_test "repeat number on last number" \
  false \
  1 2 3 3 2 1 2 1 5
