#!/bin/bash
# script used by 'webhookd' to execute bash script under restricted 'webhookd' user
# 'webhookd' user can only write to '/home/webhookd/runner', and this dir is cleared after each run

# function to run script that contains user input
bash_api() {
    # set process limit to 30
    ulimit -u 30
    # create script containing input
    printf "%s\n" "$raw" > /home/webhookd/runner/"$dir_name"/bashrun
    # cd to only dir 'webhookd' user can write to
    cd /home/webhookd/runner/"$dir_name"
    # set start time
    start_time="$(date +%s%N)"
    # run script
    source bashrun
    # set exit code for json output
    exitcode=$?
    # set end time
    end_time="$(date +%s%N)"
    # calculate total run time based on start and end time for json output
    time="$(awk "BEGIN {printf \"%.3f\n\", ($end_time - $start_time) / 1000000000}")s"
}

# function to get the results from running the script and output them as json
bash_results() {
    # get stdout from file and remove colors
    stdout="$(sed -r 's/\x1B(\[[0-9;]*[JKmsu]|\(B)//g' /home/webhookd/runner/"$dir_name"/bashstdout)"
    # get stderr from file and remove colors
    stderr="$(sed -r 's/\x1B(\[[0-9;]*[JKmsu]|\(B)//g' /home/webhookd/runner/"$dir_name"/bashstderr)"
    # use jq to output json containing input, stdout, stderr, exit code, and run time
    jq -n \
      --arg pg "$raw" \
      --arg so "$stdout" \
      --arg se "$stderr" \
      --arg ex "$exitcode" \
      --arg tm "$time" \
      '{"program":$pg,"stdout":$so,"stderr":$se,"exit":$ex,"time":$tm}'
    # remove any files that were created during run
    rm -rf /home/webhookd/runner/"$dir_name"
}

# convert key input to sha256sum
key_hash="$(echo "$key" | sha256sum | cut -f1 -d' ')"
# unset key input so cannot be seen by running script
unset key
# compare input key hash to stored key hash
case "$key_hash" in
    "$WHD_AUTH_HASH")
        # successful authorization
        sleep 0
        ;;
    *)
        # failed authorization
        echo '{"error":"Invalid authorization."}' | jq '.'
        exit
        ;;
esac

# check if user input is from URL or sent as data
if [[ -n "$in" ]]; then
    raw="$in"
else
    raw="$@"
fi
# remove any files left behind in case process was killed by webhookd
for dir in $(ls /home/webhookd/runner); do
    # break if nothing
    [[ -z "$dir" ]] && break
    # get date dir was created by removing random string at end
    dir_date="$(echo "$dir" | cut -f1 -d'_' | grep '[0-9]')"
    # check if is directory and dir_date variable is 10 chars long
    if [[ -d "/home/webhookd/runner/$dir" && "${#dir_date}" -eq "10" ]]; then
        # delete if is dir and older than 10 seconds
        if [[ "$(($(date +%s)-$dir_date))" -gt "10" ]]; then
            rm -rf /home/webhookd/runner/"$dir"
        fi
    # else remove any other junk left behind
    else
        rm -rf /home/webhookd/runner/"$dir"
    fi
done
# create directory for current instance
dir_name="$(date +%s)_$RANDOM"
mkdir -p /home/webhookd/runner/"$dir_name"
# run script based on user input and send stdout and stderr to files
bash_api 1> /home/webhookd/runner/"$dir_name"/bashstdout 2> /home/webhookd/runner/"$dir_name"/bashstderr
# get results and output json
bash_results 2> /dev/null
